apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "postgres:14.5-alpine"
        envFrom:
        - configMapRef:
            name: postgres-configmap
        - secretRef:
            name: postgres-secret

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: "mongo:6.0.5"
        envFrom:
        - configMapRef:
            name: mongo-configmap
        - secretRef:
            name: mongo-secret

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: "mongo-express:latest"
        ports:
          - containerPort: 8080
          - containerPort: 8081
        envFrom:
        - configMapRef:
            name: mongo-express-configmap
        - secretRef:
            name: mongo-express-secret

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: "redis:7.0"

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-session-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-session
  template:
    metadata:
      labels:
        app: redis-session
    spec:
      containers:
      - name: redredis-sessionis
        image: "redis:7.0"    

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: "jounglab112a/noteflow-frontend:latest"
        ports:
          - containerPort: 7415
        command: ["/bin/bash","-c"]
        args: ["yarn && yarn vite"]
        envFrom:
        - configMapRef:
            name: frontend-configmap

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: "jounglab112a/noteflow-backend:latest"
        ports:
          - containerPort: 3000
        command: ["/bin/bash","-c"]
        args: ["npm install && eval ${INIT_CMD1} && npm run start"]
        envFrom:
        - configMapRef:
            name: backend-configmap

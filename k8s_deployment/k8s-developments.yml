apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "postgres:14.5-alpine"
        envFrom:
        - configMapRef:
            name: postgres-configmap
        - secretRef:
            name: postgres-secret

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: "mongo:6.0.5"
        envFrom:
        - configMapRef:
            name: mongo-configmap
        - secretRef:
            name: mongo-secret

        volumeMounts:
          - name: noteflow-data
            mountPath: /data/db
          - name: noteflow-config
            mountPath: /data/configdb
          - name: mongo-init-script
            mountPath: /docker-entrypoint-initdb.d/mongo-init.js
            readOnly: true
      volumes:
        - name: noteflow-data
          emptyDir: {}
        - name: noteflow-config
          emptyDir: {}
        - name: mongo-init-script
          hostPath:
            path: ./mongo/mongo-init.js
            type: File


--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: "mongo-express:latest"
        ports:
          - containerPort: 8080
          - containerPort: 8081
        envFrom:
        - configMapRef:
            name: mongo-express-configmap
        - secretRef:
            name: mongo-express-secret

        volumeMounts:
          - name: noteflow-data
            mountPath: /data/db
          - name: noteflow-config
            mountPath: /data/configdb
          - name: mongo-init-script
            mountPath: /docker-entrypoint-initdb.d/mongo-init.js
            readOnly: true
      volumes:
        - name: noteflow-data
          emptyDir: {}
        - name: noteflow-config
          emptyDir: {}
        - name: mongo-init-script
          hostPath:
            path: ./mongo/mongo-init.js
            type: File

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: "redis:7.0"

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-session-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-session
  template:
    metadata:
      labels:
        app: redis-session
    spec:
      containers:
      - name: redredis-sessionis
        image: "redis:7.0"    

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: "node:lts"
        ports:
          - containerPort: 7415
        workingDir: /frontend
        command: ["sh"]
        args: ["-c", "yarn install && yarn vite"]
        envFrom:
        - configMapRef:
            name: mongo-configmap
        - secretRef:
            name: mongo-secret

        volumeMounts:
          - name: frontend-script
            mountPath: /frontend
            readOnly: true
      volumes:
        - name: frontend-script
          hostPath:
            path: ./noteflow-frontend
            type: Directory

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: "node:lts"
        ports:
          - containerPort: 3000
          - containerPort: 3001
        workingDir: /backend
        command: ["sh"]
        args: ["-c", "yarn install && yarn vite"]
        envFrom:
        - configMapRef:
            name: backend-configmap
        - secretRef:
            name: backend-secret

        volumeMounts:
          - name: backend-script
            mountPath: /backend
            readOnly: true
      volumes:
        - name: backend-script
          hostPath:
            path: ./noteflow-backend
            type: Directory

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: migrate-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: migrate
  template:
    metadata:
      labels:
        app: migrate
    spec:
      containers:
      - name: migrate
        image: "node:lts"
        workingDir: /backend
        command: ["sh"]
        args: ["-c", "npm install && npm run db:migrate"]
        envFrom:
        - configMapRef:
            name: backend-configmap
        - secretRef:
            name: backend-secret

        volumeMounts:
          - name: backend-script
            mountPath: /backend
            readOnly: true
      volumes:
        - name: backend-script
          hostPath:
            path: ./noteflow-backend
            type: Directory

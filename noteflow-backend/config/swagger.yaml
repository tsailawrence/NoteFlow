openapi: 3.0.0
info:
  title: 軟體開發方法-第六組 noteflow
  description: 詳情請查閱 [Github noteflow-backend](https://github.com/vnaticzhock/noteflow-backend)
  version: "0.1"
servers:
  - url: http://localhost:3000/
    description: localhost
  - url: https://noteflow.live/
    description: production


paths:
  /:
    get:
      tags:
        - frontend
      summary: 首頁
      description: 首頁
      responses:
          '200':
            description: 首頁成功
            content:
              text/plain:
                example:
                  ok
                  
  /api/hello-world:
    get:
      summary: health check
      tags:
        - healthCheck
      responses:
        '200':
          description: healthCheck
          content:
            text/plain:
              example:
                hello world!

  /api/user/register:
    post:
      summary: 使用者註冊
      tags:
          - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                user:
                  name: test
                  email: test@gmail.com
                  password: test
      responses:
        '200':
          description: successful registered
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
              example:
                user:
                  name: test
                  email: test@gmail.com
                  uuid: fd16ffe2-61a7-4c61-8693-009428a3b43a
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20ifSwiaWF0IjoxNjgxMTMxMjgxLCJleHAiOjE2ODE3MzYwODF9.iUOMcH_ltO42896ruTL5KA9eRokVbte0ByAreH0L0TE
        '400':
          description: bad request
          content:
            application/json:
              example:
                errors: You didn't provide sufficient information.
        '401':
          description: bad request
          content:
            application/json:
              example:
                errors: Forbidden, you already have  an email.

  /api/user/login:
    post:
      summary: 登入
      description: 登入
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                user:
                  email: test@gmail.com
                  password: test
      responses:
        '200':
          description: successful login
          content:
            application/json:
              example:
                user:
                  email: test@gmail.com
                  name: test
        '401':
          description: user auth error
          content:
            application/json:
              example:
                errors: email or password is not valid
        '422':
          description: input data error
          content:
            application/json:
              example:
                errors: email or password input error
  
  
  /api/user/who-am-i:
    get:
      summary: 讀取session, 使用者是否已登入
      description: 讀取session, 使用者是否已登入
      tags:
        - user
      responses:
        '200':
          description: 已登入狀態
          content:
            application/json:
              example:
                text: had login
        '401':
          description: 未登入
          content:
            application/json:
              example:
                UnauthorizedError: You have no login data.

  /api/user/logout:
    post:
      summary: 登出
      description: 登出
      tags:
        - user
      responses:
        '200':    # status code
          description: Successful logout

  /api/user/get-photo-url:
    get:
      summary: 獲取使用者的照片連結
      description: 獲取使用者的照片連結
      tags:
        - user
      responses:
        '200':
          description: Successful fetch
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string

  
  /api/flows:
    get:
        summary: 獲取全部的 flows
        description: 獲取全部的 flows
        tags:
          - flows
        parameters:
          - name: page
            in: query
            description: 第幾次刷新(從零開始計數)
            required: true
            schema:
              type: integer
        responses:
          '200':    # status code
            description: Successful fetch flows
            content:
              application/json:
                schema:
                  type: object
                  items:
                    type: string
          '401':
            description: Unauthorized. You haven't log in yet.
            content:
              application/json:
                example:
                  errors: Unauthorized. You haven't log in yet.

  /api/flows/get-colab-list:
    get:
        summary: get who is authorized to enter into the flow
        description: get who is authorized to enter into the flow
        tags:
          - flows
        parameters:
          - name: id
            in: query
            description: 拿到可以共同編輯這個 Flow 的名單
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: successfully fetch colab list of a flow
            content:
              application/json:
                  schema:
                    type: object
                    items:
                      type: string
          '404':
            description: flow not found
            content:
              application/json:
                  schema:
                    type: object
                    items:
                      type: string

  /api/flows/get-title:
    get:
      summary: 獲得特定 flow 的 title
      tags:
        - flows
      parameters:
        - name: id
          in: query
          description: specific flow id
          required: true
          schema:
            type: string

      responses:
        '200': 
          description: 成功獲取 title
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
                  
  /api/flows/set-title:
    post: 
      summary: 更改特定 flow 的 title
      tags:
        - flows
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
              example:
                id: test@gmail.com-flow-00000-00000-0000
                title: test-flow
      responses:
        '200':
          description: successful set flow name
          content:
            application/json:
              schema:
                type: boolean
                items:
                  type: string
              example:
                

  
  /api/flows/create:
    post:
      summary: 新增一個 Flow 到使用者的 Flow 倉庫中
      tags:
        - flows
      responses:
        '200':    # status code
          description: 成功
          content:
             application/json:
              schema:
                type: boolean
                items:
                  type: string
        '500':
          description: 內部伺服器錯誤
  
  /api/flows/delete-flow:
    post:
      summary: 刪除 Flow
      tags:
        - flows
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
              example:
                id: test@gmail.com-flow-00000-00000-0000-0000
      responses:
        '200':    # status code
          description: 成功刪除 flow
        '401':
          description: 你並未被授權刪除這個 flow
        '500':
          description: 內部伺服器錯誤
      
  /api/library:
    get:
        summary: get library
        description: get library
        tags:
          - library
        responses:
          '200':    # status code
            description: successfully get library
            content:
              application/json:
                schema:
                  type: object
                  items:
                    type: string
          '401':
            description: Unauthorized. You haven't log in yet.
            content:
              application/json:
                example:
                  errors: Unauthorized. You haven't log in yet.
          '404':
            description: model error
            content:
              application/json:
                example:
                  errors: Error.
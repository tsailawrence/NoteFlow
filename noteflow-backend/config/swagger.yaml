openapi: 3.0.0
info:
  title: 軟體開發方法-第五組 noteflow
  description: 詳情請查閱 [Github noteflow-backend](https://github.com/vnaticzhock/noteflow-backend)
  version: "0.1"
servers:
  - url: http://localhost:3000/
    description: main server


paths:
  /:
    get:
      summary: 首頁
      description: 首頁
      responses:
          '200':
            description: 首頁成功
            content:
              application/json:
                schema: 
                  type: object

  /api/user:
    get:
      summary: get user's JWT
      tags:
        - user
      responses:
        '200':    # status code
          description: get user token
          content:
            application/json:
              schema: 
                type: object
    put:
      summary: 更新使用者資訊
      tags:
        - user
      responses:
        '200':    # status code
          description: update user info
          content:
            application/json:
              schema: 
                type: object

  /api/user/register:
    post:
      summary: 使用者註冊
      x-swagger-router-controller: user-controller
      tags:
          - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                user: 
                  name: test
                  email: test@gmail.com
                  password: test
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
              example:
                user: 
                  name: test
                  email: test@gmail.com
                  uuid: fd16ffe2-61a7-4c61-8693-009428a3b43a
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20ifSwiaWF0IjoxNjgxMTMxMjgxLCJleHAiOjE2ODE3MzYwODF9.iUOMcH_ltO42896ruTL5KA9eRokVbte0ByAreH0L0TE
        '400':
          description: bad request
  /api/user/login:
    get:
      summary: 登入畫面
      tags:
        - user
      responses:
        '200':
          description: 進入登入畫面
        '404':
          description: not found
    post:
      summary: 登入
      x-swagger-router-controller: user-controller
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                user: 
                  name: admin
                  email: admin@gmail.com
                  password: admin
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
              example:
                user: 
                  id: 1
                  uuid: e8a3d4c9-ae21-4c4b-80b7-62b0f480e83e
                  email: admin@gmail.com
                  name: admin
                  created_at: "2023-04-10T12:52:21.773Z"
                  updated_at: "2023-04-10T12:52:21.773Z"
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOjEsImVtYWlsIjoiYWRtaW5AZ21haWwuY29tIn0sImlhdCI6MTY4MTEzMTU1NCwiZXhwIjoxNjgxNzM2MzU0fQ.RNYPSb4yX5rCXLdmFDoKq5A0r44G3N6vDIQaDTndYa8
        '401':
          description: user auth failed
          content:
            text/plain:
              type: string
              example: is invalid
        '422':
          description: data type error
          content:
            text/plain:
              type: string
              example: is not allowed
  /api/user/logout:
    post:
      summary: 登出
      description: 登出
      tags:
        - user
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
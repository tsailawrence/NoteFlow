openapi: 3.0.0
info:
  title: 軟體開發方法-第五組 noteflow
  description: 詳情請查閱 [GitHub NoteFlow](https://github.com/tsailawrence/NoteFlow)、[NoteFlow Website](https://noteflow.live/)
  version: "1,0"
servers:
  - url: http://localhost:3000/
    description: localhost
  - url: https://noteflow.live/
    description: production


paths:
  /:
    get:
      summary: Landing page
      tags:
        - Home Page
      responses:
        '200':
          description: success access
        '404':
          description: page not found

  /api/hello-world:
    get:
      summary: health check
      tags:
        - API-healthCheck
      responses:
        '200':
          description: healthCheck
          content:
            text/plain:
              example:
                hello world!
        '404':
          description: server down

  /api/swagger:
    get:
      summary: swagger API Document
      tags:
        - API-healthCheck
      responses:
        '200':
          description: success access
        '404':
          description: page not found

  /api/reset-redis:
    get:
      summary: reset redis
      tags:
        - API-healthCheck
      responses:
        '200':
          description: success reset redis
        '404':
          description: page not found

  /api/user/register:
    post:
      summary: user register
      tags:
          - userServiceService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                user:
                  name: test
                  email: test@gmail.com
                  password: test
      responses:
        '200':
          description: successful register
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  uuid:
                    type: string
                  token:
                    type: string

              example:
                user:
                  name: test
                  email: test@gmail.com
                  uuid: fd16ffe2-61a7-4c61-8693-009428a3b43a
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiZW1haWwiOiJhZG1pbkBnbWFpbC5jb20ifSwiaWF0IjoxNjgxMTMxMjgxLCJleHAiOjE2ODE3MzYwODF9.iUOMcH_ltO42896ruTL5KA9eRokVbte0ByAreH0L0TE
        '400':
          description: bad request
          content:
            application/json:
              example:
                errors:
                  You didn't provide sufficient information.
        '401':
          description: bad request
          content:
            application/json:
              example:
                errors:
                  Forbidden, you already have an email.
        '404':
          description: not found
          content:
            application/json:
              example:
                errors:
                  register link not found

  /api/user/login:
    post:
      summary: user login
      tags:
        - userServiceService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
            example:
              user:
                name: test
                email: test@gmail.com
                password: test
      responses:
        '200':
          description: successful login
          content:
            application/json:
              example:
                user:
                  email: test@gmail.com
                  name: test
        '401':
          description: user auth error
          content:
            application/json:
              example:
                errors:
                  email or password is not valid
        '404':
          description: page not found
          content:
            application/json:
              example:
                errors:
                    page not found
        '422':
          description: input data error
          content:
            application/json:
              example:
                errors:
                    email or password input error
        '500':
          description: internal error
          content:
            application/json:
              example:
                errors:
                    internal error

  /api/user/google-login:
    post:
      summary: user google login to single sign on
      tags:
        - userServiceService
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
              example:
                user:
                  email: test1234@gmail.com
                  name: test
      responses:
        '200':
          description: successful login
          content:
            application/json:
              example:
                user:
                  id: 2
                  email: 'test@gmail.com'
                  name: 'test'
                  password: '$argon2id$v=19$m=65536,t=3,p=4$0BjJneCLlW11ZlCj6k62IA$bTQ9YgkdgU4bE4jgnqZrAO1qk68edZaAOxsoEltDTE8'
                  created_at: '2023-04-10T12:41:17.148Z'
                  updated_at: '2023-04-10T12:41:17.148Z'
        '422':
          description: insufficient
          content:
            application/json:
              example:
                errors: You provide wrong data format.

  /api/user/reset-password-send-email:
    post:
      summary: reset password and setd email
      tags:
        - userService
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
              example:
                user:
                  email: test1234@gmail.com
                  name: test
      responses:
        '200':
          description: successful login
          content:
            application/json:
              example:
                user:
                  email: 'test@gmail.com'
                  name: 'test'
        '404':
          description: not found
          content:
            application/json:
              example:
                errors: link not found
        '408':
          description: server timeout
          content:
            application/json:
              example:
                errors: server timeout
        '422':
          description: server timeout
          content:
            application/json:
              example:
                errors: You provide wrong data format.

  /api/user/reset-password-auth:
    post:
      summary: reset-password-auth
      tags:
        - userService
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  name:
                    type: string
              example:
                user:
                  token: test1234@gmail.com
                  email: test1234@gmail.com
      responses:
        '200':
          description: successful login
          content:
            application/json:
              example:
                user:
                  email: 'test@gmail.com'
                  name: 'test'
        '404':
          description: not found
          content:
            application/json:
              example:
                errors: link not found
        '408':
          description: server timeout
          content:
            application/json:
              example:
                errors: server timeout
        '422':
          description: server timeout
          content:
            application/json:
              example:
                errors: You provide wrong data format.


  /api/user/logout:
    post:
      summary: logout
      description: logout
      tags:
        - userService
      responses:
        '200':
          description: user logout and clean session
          content:
            application/json:
              example:
                message: success
